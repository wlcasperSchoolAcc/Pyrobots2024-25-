package org.firstinspires.ftc.teamcode.Testing;

import com.acmerobotics.dashboard.FtcDashboard;
import com.acmerobotics.dashboard.config.Config;
import com.acmerobotics.dashboard.telemetry.MultipleTelemetry;
import com.arcrobotics.ftclib.controller.PIDController;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.arcrobotics.ftclib.controller.PIDFController;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotorEx;



@Config
public class DriveFunctions{



    public static double py = 0.0003, iy = 0.0001, dy = 0.00003;
    public static double px = 0.0003, ix = 0.01, dx = 0.00003;
    public static double f = 0;

    private static PIDController controllerx = new PIDController(px,ix,dx);
    private static PIDController controllery = new PIDController(py, iy,dy);



    public static int targetx = 0;
    public static int targety = 0;

    private final double ticks_in_degree = 103.8;




    public static double[] pyrocalc(double nowx, double nowy,double x, double y) {
        double YPos = -nowy;

        double XPos = nowx;
        double pidy = controllery.calculate(YPos, y);
        double pidx = controllerx.calculate(XPos, x);
        double ff = Math.cos(Math.toRadians(y / 103.8)) * f; //103.8 is the ticks_in_degree
        double powery = pidy + ff;
        double powerx = pidx + ff;
        //Add in the power x for the correction code
        double realpow[] = {1.34*(-powery - powerx), 1.14*(powery - powerx), 1.14*(-powery + powerx), (powery + powerx)};


        return (realpow);
    }
/*
for actual auton add func like this:
void drive(x, y){

(potentially add timer code here)


    pyrocalc(x,y);
    BL.setPower(realpow[0]);
}




*/

    }

//}


//Added initialized motors for the four

//Still todo:
//add rem control hub into the mechanum chassis
//configure the robot
//Add init for odo pods
//add set power to every motor
//tune the robot
//p = 0.001
//i = 0.01
//d = 0.0001
//f = 0


//Added initialized motors for the four

//Still todo:
//add rem control hub into the mechanum chassis
//configure the robot 
//Add init for odo pods
//add set power to every motor
//tune the robot
//p = 0.001
//i = 0.01
//d = 0.0001
//f = 0
